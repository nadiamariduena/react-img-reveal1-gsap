{"version":3,"sources":["App.js","index.js","img/people.webp"],"names":["App","container","useRef","image","imageReveal","CSSRulePlugin","getRule","tl","TimelineLite","useEffect","to","css","visibility","width","ease","Power2","easeInOut","from","scale","delay","className","ref","el","src","ImgBeauty1","alt","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"mOAuDeA,EAlDH,WACV,IAAIC,EAAYC,iBAAO,MACnBC,EAAQD,iBAAO,MACfE,EAAcC,IAAcC,QAAQ,wBAIpCC,EAAK,IAAIC,IA6Bb,OA1BAC,qBAAU,WAGRF,EAAGG,GAAGT,EAAW,EAAG,CAElBU,IAAK,CAAEC,WAAY,aAGlBF,GACCN,EACA,IACA,CAAES,MAAO,KAAMC,KAAMC,IAAOC,YAI7BC,KAAKd,EAAO,IAAK,CAAEe,MAAO,IAAKJ,KAAMC,IAAOC,UAAWG,OAAQ,SAYlE,6BAASC,UAAU,QAEjB,yBAAKC,IAAK,SAACC,GAAD,OAASrB,EAAYqB,GAAKF,UAAU,aAC5C,oCACE,yBAAKA,UAAU,iBACb,yBAAKC,IAAK,SAACC,GAAD,OAASnB,EAAQmB,GAAKC,IAAKC,IAAYC,IAAI,e,MCvCjEC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U,kBCZ1BC,EAAOC,QAAU,IAA0B,qC","file":"static/js/main.f7505be4.chunk.js","sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport ImgBeauty1 from \"./img/people.webp\";\nimport CSSRulePlugin from \"gsap/CSSRulePlugin\";\nimport { TimelineLite, Power2 } from \"gsap\";\n\nconst App = () => {\n  let container = useRef(null);\n  let image = useRef(null);\n  let imageReveal = CSSRulePlugin.getRule(\".img-container:after\");\n  //\n  // tl stands for TimelineLite\n  //   You need to declare this to make the animations\n  let tl = new TimelineLite();\n  //\n  //\n  useEffect(() => {\n    //   the container div is represented here, 1 represents the DURATION, in other words it takes 1sec to load/reveal\n    // You can change the duration from 1 to 0 , so that you dont have to wait a second to see the animation\n    tl.to(container, 1, {\n      // the css represents what you want to animate\n      css: { visibility: \"visible\" },\n      //   imageReveal will reveal the sudo class element :after on line 9\n    })\n      .to(\n        imageReveal,\n        1.4,\n        { width: \"0%\", ease: Power2.easeInOut }\n        // duration : imageReveal, 1.4,\n        // what happens in img reveal is that you are changing the width: to a 0% , if you notice it correspond to the reveal curtain arriving to the end\n      )\n      .from(image, 1.4, { scale: 1.6, ease: Power2.easeInOut, delay: -1.5 });\n    //   the last line starting from the \"FROM\", will be to set up the zoom out while the reveal is happening, this zoom out is more a scaling effect\n    // .from(image, 1.4, { scale: 1.6,  means that it starts FROM a zoomed/scaled 1,6 and it will end up zooming out to its original size\n\n    // the delay here:  delay: -1.5 }); will be to set up the moment from when the scaling animation will start\n    // So if we set up the scaling in -1.5 you will notice it s from a second before the reveal start. I tried to add a delay of 2 or 1 only and it start from where the reveal is nearly done, so its to slow\n  });\n\n  //\n  //\n\n  return (\n    <section className=\"main\">\n      {/* the ref makes alussion to the line 7 , by adding this ref here, you will have a connection to this div  */}\n      <div ref={(el) => (container = el)} className=\"container\">\n        <>\n          <div className=\"img-container\">\n            <img ref={(el) => (image = el)} src={ImgBeauty1} alt=\"image\" />\n          </div>\n        </>\n      </div>\n    </section>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./scss/main.scss\";\n\n//\n//\n//\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","module.exports = __webpack_public_path__ + \"static/media/people.d0ada4b4.webp\";"],"sourceRoot":""}